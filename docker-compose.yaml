version: "3.8"

services:
  postgres:
    image: docker.io/postgres:latest
    volumes:
      - ./database/db-init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASS}
      AUTH_PASS: ${AUTH_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  rest:
    image: docker.io/postgrest/postgrest:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGRST_ADMIN_SERVER_PORT: 3001
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_DB_URI: postgres://authenticator:${AUTH_PASS}@postgres:5432/${POSTGRES_DB}
      PGRST_DB_SCHEMA: api
      PGRST_JWT_SECRET: ${GOTRUE_SECRET}
    ports:
      - "3000:3000"
      - "3001:3001"

  auth:
    image: docker.io/bitnami/gotrue:2.152.0
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --timeout=5 --tries=1 --quiet http://localhost:9999/health -O - || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    environment:
      GOTRUE_SITE_URL: "http://localhost:5173"
      GOTRUE_JWT_SECRET: ${GOTRUE_SECRET}
      GOTRUE_JWT_DEFAULT_GROUP_NAME: client
      GOTRUE_JWT_ADMIN_GROUP_NAME: admin
      GOTRUE_DB_DRIVER: postgres
      DATABASE_URL: postgres://${PGUSER}:${PGPASS}@postgres:5432/${POSTGRES_DB}?options=-c%20search_path%3Dauth
      GOTRUE_DB_NAMESPACE: auth
      GOTRUE_API_HOST: 0.0.0.0
      API_EXTERNAL_URL: "http://localhost:9999"
      PORT: 9999
      GOTRUE_MAILER_AUTOCONFIRM: false
    ports:
      - "9999:9999/tcp"
